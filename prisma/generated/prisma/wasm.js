
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  provider: 'provider',
  stripeCustomerId: 'stripeCustomerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive'
};

exports.Prisma.GuestUserScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  guestUserId: 'guestUserId',
  tempCartId: 'tempCartId',
  appliedPromoCodeId: 'appliedPromoCodeId',
  promoDiscountAmount: 'promoDiscountAmount',
  promoAppliedAt: 'promoAppliedAt',
  requiresPromoVerification: 'requiresPromoVerification',
  shippingMethod: 'shippingMethod',
  shippingAddressId: 'shippingAddressId',
  stripeCheckoutSessionId: 'stripeCheckoutSessionId',
  checkoutStatus: 'checkoutStatus',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  printfulVariantId: 'printfulVariantId',
  printfulProductId: 'printfulProductId',
  variantName: 'variantName',
  productName: 'productName',
  size: 'size',
  color: 'color',
  sku: 'sku',
  unitPrice: 'unitPrice',
  quantity: 'quantity',
  imageUrl: 'imageUrl',
  addedAt: 'addedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  guestUserId: 'guestUserId',
  orderNumber: 'orderNumber',
  customerEmail: 'customerEmail',
  customerFirstName: 'customerFirstName',
  customerLastName: 'customerLastName',
  customerPhone: 'customerPhone',
  shippingAddress: 'shippingAddress',
  shippingMethod: 'shippingMethod',
  shippingCost: 'shippingCost',
  stripeSessionId: 'stripeSessionId',
  stripeCustomerId: 'stripeCustomerId',
  paymentIntentId: 'paymentIntentId',
  subtotal: 'subtotal',
  discountAmount: 'discountAmount',
  taxAmount: 'taxAmount',
  amountTotal: 'amountTotal',
  currency: 'currency',
  taxCalculation: 'taxCalculation',
  status: 'status',
  printfulOrderId: 'printfulOrderId',
  printfulStatus: 'printfulStatus',
  trackingCode: 'trackingCode',
  trackingNumber: 'trackingNumber',
  trackingUrl: 'trackingUrl',
  labelUrl: 'labelUrl',
  deliveryDate: 'deliveryDate',
  deliveryDays: 'deliveryDays',
  methodShipped: 'methodShipped',
  carrier: 'carrier',
  shipmentCost: 'shipmentCost',
  estimatedDelivery: 'estimatedDelivery',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  shippedAt: 'shippedAt',
  deliveredAt: 'deliveredAt',
  promoCodeId: 'promoCodeId',
  promoCodeUsed: 'promoCodeUsed',
  promoDiscount: 'promoDiscount',
  addressId: 'addressId',
  refundReason: 'refundReason',
  refundedAt: 'refundedAt',
  refundAmount: 'refundAmount'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  printfulVariantId: 'printfulVariantId',
  printfulProductId: 'printfulProductId',
  productName: 'productName',
  variantName: 'variantName',
  variantSize: 'variantSize',
  variantColor: 'variantColor',
  variantSku: 'variantSku',
  images: 'images',
  unitPrice: 'unitPrice',
  quantity: 'quantity',
  totalPrice: 'totalPrice',
  taxAmount: 'taxAmount',
  taxRate: 'taxRate'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  guestUserId: 'guestUserId',
  firstName: 'firstName',
  lastName: 'lastName',
  company: 'company',
  line1: 'line1',
  line2: 'line2',
  city: 'city',
  state: 'state',
  country: 'country',
  postalCode: 'postalCode',
  phone: 'phone',
  type: 'type',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CheckoutSessionScalarFieldEnum = {
  id: 'id',
  stripeSessionId: 'stripeSessionId',
  cartId: 'cartId',
  subtotal: 'subtotal',
  estimatedTax: 'estimatedTax',
  estimatedShipping: 'estimatedShipping',
  promoDiscount: 'promoDiscount',
  estimatedTotal: 'estimatedTotal',
  finalTax: 'finalTax',
  finalShipping: 'finalShipping',
  finalTotal: 'finalTotal',
  status: 'status',
  stripeEventId: 'stripeEventId',
  webhookProcessedAt: 'webhookProcessedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PromoCodeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  discountCents: 'discountCents',
  discountPercentage: 'discountPercentage',
  minOrderAmount: 'minOrderAmount',
  maxDiscountAmount: 'maxDiscountAmount',
  maxUses: 'maxUses',
  maxUsesPerUser: 'maxUsesPerUser',
  validFrom: 'validFrom',
  validTo: 'validTo',
  isPublic: 'isPublic',
  isActive: 'isActive',
  isFirstTimeOnly: 'isFirstTimeOnly',
  allowedCategories: 'allowedCategories',
  excludedCategories: 'excludedCategories',
  allowedProducts: 'allowedProducts',
  excludedProducts: 'excludedProducts',
  usageCount: 'usageCount',
  createdBy: 'createdBy',
  lastUsedAt: 'lastUsedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PromoCodeUsageScalarFieldEnum = {
  id: 'id',
  promoCodeId: 'promoCodeId',
  userId: 'userId',
  orderId: 'orderId',
  discountApplied: 'discountApplied',
  orderAmount: 'orderAmount',
  status: 'status',
  failureReason: 'failureReason',
  usedAt: 'usedAt'
};

exports.Prisma.PrintfulOrderScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  printfulOrderId: 'printfulOrderId',
  printfulStatus: 'printfulStatus',
  printfulData: 'printfulData',
  fulfillmentData: 'fulfillmentData',
  trackingNumber: 'trackingNumber',
  trackingUrl: 'trackingUrl',
  carrier: 'carrier',
  estimatedDelivery: 'estimatedDelivery',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fulfilledAt: 'fulfilledAt'
};

exports.Prisma.SystemConfigScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  entityId: 'entityId',
  action: 'action',
  oldValues: 'oldValues',
  newValues: 'newValues',
  userId: 'userId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  provider: 'provider',
  stripeCustomerId: 'stripeCustomerId'
};

exports.Prisma.GuestUserOrderByRelevanceFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName'
};

exports.Prisma.CartOrderByRelevanceFieldEnum = {
  userId: 'userId',
  guestUserId: 'guestUserId',
  tempCartId: 'tempCartId',
  shippingMethod: 'shippingMethod',
  stripeCheckoutSessionId: 'stripeCheckoutSessionId',
  checkoutStatus: 'checkoutStatus'
};

exports.Prisma.CartItemOrderByRelevanceFieldEnum = {
  variantName: 'variantName',
  productName: 'productName',
  size: 'size',
  color: 'color',
  sku: 'sku',
  imageUrl: 'imageUrl'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  userId: 'userId',
  guestUserId: 'guestUserId',
  orderNumber: 'orderNumber',
  customerEmail: 'customerEmail',
  customerFirstName: 'customerFirstName',
  customerLastName: 'customerLastName',
  customerPhone: 'customerPhone',
  shippingMethod: 'shippingMethod',
  stripeSessionId: 'stripeSessionId',
  stripeCustomerId: 'stripeCustomerId',
  paymentIntentId: 'paymentIntentId',
  currency: 'currency',
  status: 'status',
  printfulOrderId: 'printfulOrderId',
  printfulStatus: 'printfulStatus',
  trackingCode: 'trackingCode',
  trackingNumber: 'trackingNumber',
  trackingUrl: 'trackingUrl',
  labelUrl: 'labelUrl',
  methodShipped: 'methodShipped',
  carrier: 'carrier',
  estimatedDelivery: 'estimatedDelivery',
  promoCodeUsed: 'promoCodeUsed',
  refundReason: 'refundReason'
};

exports.Prisma.OrderItemOrderByRelevanceFieldEnum = {
  productName: 'productName',
  variantName: 'variantName',
  variantSize: 'variantSize',
  variantColor: 'variantColor',
  variantSku: 'variantSku'
};

exports.Prisma.AddressOrderByRelevanceFieldEnum = {
  userId: 'userId',
  guestUserId: 'guestUserId',
  firstName: 'firstName',
  lastName: 'lastName',
  company: 'company',
  line1: 'line1',
  line2: 'line2',
  city: 'city',
  state: 'state',
  country: 'country',
  postalCode: 'postalCode',
  phone: 'phone',
  type: 'type'
};

exports.Prisma.CheckoutSessionOrderByRelevanceFieldEnum = {
  stripeSessionId: 'stripeSessionId',
  status: 'status',
  stripeEventId: 'stripeEventId'
};

exports.Prisma.PromoCodeOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  description: 'description',
  createdBy: 'createdBy'
};

exports.Prisma.PromoCodeUsageOrderByRelevanceFieldEnum = {
  userId: 'userId',
  status: 'status',
  failureReason: 'failureReason'
};

exports.Prisma.PrintfulOrderOrderByRelevanceFieldEnum = {
  printfulOrderId: 'printfulOrderId',
  printfulStatus: 'printfulStatus',
  trackingNumber: 'trackingNumber',
  trackingUrl: 'trackingUrl',
  carrier: 'carrier',
  estimatedDelivery: 'estimatedDelivery'
};

exports.Prisma.SystemConfigOrderByRelevanceFieldEnum = {
  key: 'key',
  description: 'description'
};

exports.Prisma.AuditLogOrderByRelevanceFieldEnum = {
  entityType: 'entityType',
  entityId: 'entityId',
  action: 'action',
  userId: 'userId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent'
};


exports.Prisma.ModelName = {
  User: 'User',
  GuestUser: 'GuestUser',
  Cart: 'Cart',
  CartItem: 'CartItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Address: 'Address',
  CheckoutSession: 'CheckoutSession',
  PromoCode: 'PromoCode',
  PromoCodeUsage: 'PromoCodeUsage',
  PrintfulOrder: 'PrintfulOrder',
  SystemConfig: 'SystemConfig',
  AuditLog: 'AuditLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/ramonm.m/Developer/Projects/DigitalRevolution/my-project/prisma/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/ramonm.m/Developer/Projects/DigitalRevolution/my-project/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 1) User (Google ID as primary key) - Optional login\nmodel User {\n  id       String  @id // Google user ID\n  email    String  @unique\n  name     String?\n  provider String?\n\n  // Stripe integration\n  stripeCustomerId String? @unique // Store Stripe customer ID for reuse\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // relations\n  cart        Cart?\n  orders      Order[]\n  addresses   Address[]\n  promoUsages PromoCodeUsage[]\n\n  // Soft delete\n  isActive Boolean @default(true)\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 2) Guest User (for non-logged in users)\nmodel GuestUser {\n  id        String  @id @default(cuid())\n  sessionId String  @unique\n  email     String? // Optional email for guest checkout\n  firstName String?\n  lastName  String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // relations\n  cart      Cart?\n  orders    Order[]\n  addresses Address[]\n\n  @@index([sessionId])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 3) Cart & CartItem - Supports both logged in and guest users\nmodel Cart {\n  id Int @id @default(autoincrement())\n\n  // User relations (either logged in user OR guest)\n  user        User?      @relation(fields: [userId], references: [id])\n  userId      String?    @unique\n  guestUser   GuestUser? @relation(fields: [guestUserId], references: [id])\n  guestUserId String?    @unique\n\n  // Temporary cart for anonymous users\n  tempCartId String? @unique\n\n  // Promo code fields - applied before checkout\n  appliedPromoCode          PromoCode? @relation(fields: [appliedPromoCodeId], references: [id])\n  appliedPromoCodeId        Int?\n  promoDiscountAmount       Int? // calculated discount in cents\n  promoAppliedAt            DateTime?\n  requiresPromoVerification Boolean    @default(false)\n\n  // Shipping preference (not cost - calculated at checkout)\n  shippingMethod    String?  @default(\"standard\") // \"standard\", \"express\", \"free\"\n  shippingAddressId Int? // Reference to Address model\n  shippingAddress   Address? @relation(fields: [shippingAddressId], references: [id])\n\n  // Stripe checkout session tracking\n  stripeCheckoutSessionId String? @unique\n  checkoutStatus          String? @default(\"pending\") // \"pending\", \"in_progress\", \"completed\", \"expired\"\n\n  expiresAt DateTime?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n\n  items            CartItem[]\n  checkoutSessions CheckoutSession[]\n\n  @@index([userId])\n  @@index([guestUserId])\n  @@index([tempCartId])\n  @@index([stripeCheckoutSessionId])\n}\n\nmodel CartItem {\n  id     Int  @id @default(autoincrement())\n  cart   Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)\n  cartId Int\n\n  // Printful product reference\n  printfulVariantId Int\n  printfulProductId Int\n  variantName       String // e.g. \"Unisex T-Shirt (Black / M)\"\n  productName       String // e.g. \"Unisex T-Shirt\"\n  size              String // e.g. \"M\"\n  color             String // e.g. \"Black\"\n  sku               String? // Printful SKU\n\n  // Pricing (snapshot at add to cart)\n  unitPrice Int // Price per unit in cents\n  quantity  Int\n\n  // Images\n  imageUrl String? // Primary product image\n\n  addedAt   DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([cartId, printfulVariantId])\n  @@index([cartId])\n  @@index([printfulVariantId])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 4) Order & OrderItem - Supports both logged in and guest users\nmodel Order {\n  id Int @id @default(autoincrement())\n\n  // User relations (either logged in user OR guest)\n  user        User?      @relation(fields: [userId], references: [id])\n  userId      String?    @unique\n  guestUser   GuestUser? @relation(fields: [guestUserId], references: [id])\n  guestUserId String?\n\n  // Order identification\n  orderNumber String @unique // Human-readable order number (e.g., \"ORD-2024-001\")\n\n  // Customer info (snapshot at purchase)\n  customerEmail     String // Required for all orders\n  customerFirstName String\n  customerLastName  String\n  customerPhone     String?\n\n  // Shipping info (snapshot at purchase)\n  shippingAddress Json // Full address snapshot\n  shippingMethod  String // Method used\n  shippingCost    Int // Final shipping cost in cents\n\n  // Stripe integration\n  stripeSessionId  String  @unique\n  stripeCustomerId String? // Customer ID used for this order\n  paymentIntentId  String\n\n  // Order totals (final calculated amounts)\n  subtotal       Int // Items subtotal in cents\n  discountAmount Int // Total discount applied in cents\n  taxAmount      Int // Tax amount in cents\n  amountTotal    Int // Final total in cents\n  currency       String @default(\"usd\")\n\n  // Tax calculation details (for compliance)\n  taxCalculation Json? // Store full tax calculation details\n\n  // Order status and fulfillment\n  status String // \"pending\", \"processing\", \"shipped\", \"delivered\", \"cancelled\", \"refunded\"\n\n  // Printful integration\n  printfulOrderId String? @unique // Printful order ID for fulfillment\n  printfulStatus  String? // Printful order status\n\n  // Shipping tracking\n  trackingCode      String?\n  trackingNumber    String?\n  trackingUrl       String?\n  labelUrl          String?\n  deliveryDate      DateTime?\n  deliveryDays      Int?\n  methodShipped     String?\n  carrier           String?\n  shipmentCost      Int?\n  estimatedDelivery String?\n\n  // Timestamps\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  shippedAt   DateTime?\n  deliveredAt DateTime?\n\n  // Promo code integration (snapshot)\n  promoCode     PromoCode? @relation(fields: [promoCodeId], references: [id])\n  promoCodeId   Int?\n  promoCodeUsed String? // Code string used\n  promoDiscount Int? // Discount amount in cents\n\n  // Address reference\n  address   Address? @relation(fields: [addressId], references: [id])\n  addressId Int?\n\n  // Refund information\n  refundReason String?\n  refundedAt   DateTime?\n  refundAmount Int? // Amount refunded in cents\n\n  // Relations\n  promoUsages   PromoCodeUsage[]\n  items         OrderItem[]\n  PrintfulOrder PrintfulOrder?\n\n  @@index([orderNumber])\n  @@index([userId])\n  @@index([guestUserId])\n  @@index([status])\n  @@index([promoCodeId])\n  @@index([createdAt])\n  @@index([stripeSessionId])\n  @@index([printfulOrderId])\n}\n\nmodel OrderItem {\n  id      Int   @id @default(autoincrement())\n  order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  orderId Int\n\n  // Printful product reference\n  printfulVariantId Int // Printful variant ID\n  printfulProductId Int // Printful product ID\n\n  // Snapshot of product/variant data at purchase time\n  productName  String // Product title\n  variantName  String // Full variant name\n  variantSize  String // Size\n  variantColor String // Color\n  variantSku   String? // Printful SKU\n  images       Json? // Product images array\n\n  // Pricing\n  unitPrice  Int // Price per unit in cents (snapshot)\n  quantity   Int\n  totalPrice Int // unitPrice * quantity in cents\n\n  // Tax details for this line item (for compliance)\n  taxAmount Int? // Tax on this line item\n  taxRate   Float? // Tax rate applied\n\n  @@index([orderId])\n  @@index([printfulVariantId])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 5) Address - Supports both logged in and guest users\nmodel Address {\n  id Int @id @default(autoincrement())\n\n  // User relations (either logged in user OR guest)\n  user        User?      @relation(fields: [userId], references: [id])\n  userId      String?\n  guestUser   GuestUser? @relation(fields: [guestUserId], references: [id])\n  guestUserId String?\n\n  // Address fields\n  firstName  String\n  lastName   String\n  company    String?\n  line1      String\n  line2      String?\n  city       String\n  state      String\n  country    String  @default(\"US\")\n  postalCode String\n  phone      String?\n\n  // Address type and defaults\n  type      String  @default(\"shipping\") // \"shipping\", \"billing\", \"both\"\n  isDefault Boolean @default(false)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  orders Order[]\n  carts  Cart[] // For shipping address reference\n\n  @@index([userId])\n  @@index([guestUserId])\n  @@index([userId, isDefault])\n  @@index([guestUserId, isDefault])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 6) Checkout Session tracking\nmodel CheckoutSession {\n  id              Int    @id @default(autoincrement())\n  stripeSessionId String @unique\n\n  // Reference to cart that initiated checkout\n  cart   Cart? @relation(fields: [cartId], references: [id])\n  cartId Int?\n\n  // Calculated totals at checkout time (before Stripe)\n  subtotal          Int // in cents\n  estimatedTax      Int // in cents (estimated)\n  estimatedShipping Int // in cents\n  promoDiscount     Int // in cents\n  estimatedTotal    Int // in cents\n\n  // Final amounts from Stripe (after webhook)\n  finalTax      Int? // in cents (actual from Stripe)\n  finalShipping Int? // in cents  \n  finalTotal    Int? // in cents\n\n  status String @default(\"pending\") // \"pending\", \"completed\", \"expired\", \"cancelled\"\n\n  // Stripe webhook data\n  stripeEventId      String? // For idempotency\n  webhookProcessedAt DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([stripeSessionId])\n  @@index([cartId])\n  @@index([status])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 7) PromoCode system\nmodel PromoCode {\n  id          Int     @id @default(autoincrement())\n  code        String  @unique\n  name        String? // Human-readable name for admin (e.g., \"Black Friday 2024\")\n  description String? // Internal description\n\n  // Discount configuration (exactly one should be set)\n  discountCents      Int? // fixed discount in cents\n  discountPercentage Int? // percentage discount (1-100, stored as integer)\n\n  // Usage constraints\n  minOrderAmount    Int  @default(0) // minimum order amount in cents\n  maxDiscountAmount Int? // cap on discount amount (useful for percentage discounts)\n  maxUses           Int? // total usage limit across all users (null = unlimited)\n  maxUsesPerUser    Int  @default(1) // per-user usage limit\n\n  // Time constraints\n  validFrom DateTime  @default(now())\n  validTo   DateTime?\n\n  // Targeting and visibility\n  isPublic        Boolean @default(false) // can be discovered/shared publicly\n  isActive        Boolean @default(true) // can be used\n  isFirstTimeOnly Boolean @default(false) // only for users with no previous orders\n\n  // Category/product restrictions (optional)\n  allowedCategories  Json? // array of category IDs this applies to\n  excludedCategories Json? // array of category IDs this excludes\n  allowedProducts    Json? // array of product IDs this applies to\n  excludedProducts   Json? // array of product IDs this excludes\n\n  // Analytics and metadata\n  usageCount Int       @default(0) // denormalized usage counter for performance\n  createdBy  String? // admin user who created this\n  lastUsedAt DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  carts      Cart[]\n  orders     Order[] // orders that used this promo code\n  userUsages PromoCodeUsage[] // detailed usage tracking\n\n  @@index([code])\n  @@index([isActive, validFrom, validTo])\n  @@index([isPublic, isActive])\n  @@index([validTo]) // For cleanup of expired codes\n  @@index([usageCount]) // For popular codes analytics\n}\n\nmodel PromoCodeUsage {\n  id          Int       @id @default(autoincrement())\n  promoCode   PromoCode @relation(fields: [promoCodeId], references: [id], onDelete: Cascade)\n  promoCodeId Int\n  user        User?     @relation(fields: [userId], references: [id])\n  userId      String? // null for guest users\n  order       Order?    @relation(fields: [orderId], references: [id])\n  orderId     Int? // null if usage attempt failed\n\n  discountApplied Int // actual discount amount in cents\n  orderAmount     Int // order subtotal when code was applied\n\n  // Status tracking\n  status        String // \"applied\", \"failed\", \"expired\", \"invalid\"\n  failureReason String? // reason if status is \"failed\"\n\n  usedAt DateTime @default(now())\n\n  @@unique([promoCodeId, orderId]) // prevent duplicate usage per order\n  @@index([promoCodeId, userId])\n  @@index([userId])\n  @@index([usedAt])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 8) Printful Integration tracking\nmodel PrintfulOrder {\n  id      Int   @id @default(autoincrement())\n  orderId Int   @unique // Reference to our Order\n  order   Order @relation(fields: [orderId], references: [id])\n\n  printfulOrderId String @unique // Printful's order ID\n  printfulStatus  String // Printful order status\n\n  // Printful response data\n  printfulData    Json? // Full Printful order response\n  fulfillmentData Json? // Fulfillment details\n\n  // Tracking\n  trackingNumber    String?\n  trackingUrl       String?\n  carrier           String?\n  estimatedDelivery String?\n\n  // Timestamps\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  fulfilledAt DateTime?\n\n  @@index([printfulOrderId])\n  @@index([printfulStatus])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 9) System Configuration\nmodel SystemConfig {\n  id          Int     @id @default(autoincrement())\n  key         String  @unique\n  value       Json // Flexible value storage\n  description String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([key])\n}\n\n// ──────────────────────────────────────────────────────────────────────────\n// 10) Audit Log (for tracking important changes)\nmodel AuditLog {\n  id         Int     @id @default(autoincrement())\n  entityType String // \"order\", \"user\", \"cart\", etc.\n  entityId   String // ID of the entity\n  action     String // \"create\", \"update\", \"delete\", \"status_change\"\n  oldValues  Json? // Previous values\n  newValues  Json? // New values\n  userId     String? // User who made the change\n  ipAddress  String? // IP address\n  userAgent  String? // User agent string\n\n  createdAt DateTime @default(now())\n\n  @@index([entityType, entityId])\n  @@index([userId])\n  @@index([createdAt])\n}\n",
  "inlineSchemaHash": "2bb43bf26969faea13407f4d1333f1b3b60f9b6c43d9ff5329ce01c1d73f1f4a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToUser\"},{\"name\":\"promoUsages\",\"kind\":\"object\",\"type\":\"PromoCodeUsage\",\"relationName\":\"PromoCodeUsageToUser\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"GuestUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToGuestUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"GuestUserToOrder\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToGuestUser\"}],\"dbName\":null},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guestUser\",\"kind\":\"object\",\"type\":\"GuestUser\",\"relationName\":\"CartToGuestUser\"},{\"name\":\"guestUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tempCartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appliedPromoCode\",\"kind\":\"object\",\"type\":\"PromoCode\",\"relationName\":\"CartToPromoCode\"},{\"name\":\"appliedPromoCodeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promoDiscountAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promoAppliedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"requiresPromoVerification\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"shippingMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingAddressId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shippingAddress\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToCart\"},{\"name\":\"stripeCheckoutSessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkoutStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"},{\"name\":\"checkoutSessions\",\"kind\":\"object\",\"type\":\"CheckoutSession\",\"relationName\":\"CartToCheckoutSession\"}],\"dbName\":null},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"printfulVariantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"printfulProductId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"variantName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guestUser\",\"kind\":\"object\",\"type\":\"GuestUser\",\"relationName\":\"GuestUserToOrder\"},{\"name\":\"guestUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerFirstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerLastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"shippingMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingCost\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stripeSessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentIntentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amountTotal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxCalculation\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"printfulOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"printfulStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"labelUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"methodShipped\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shipmentCost\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedDelivery\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shippedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"promoCode\",\"kind\":\"object\",\"type\":\"PromoCode\",\"relationName\":\"OrderToPromoCode\"},{\"name\":\"promoCodeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promoCodeUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promoDiscount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToOrder\"},{\"name\":\"addressId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"refundReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refundedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refundAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promoUsages\",\"kind\":\"object\",\"type\":\"PromoCodeUsage\",\"relationName\":\"OrderToPromoCodeUsage\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"PrintfulOrder\",\"kind\":\"object\",\"type\":\"PrintfulOrder\",\"relationName\":\"OrderToPrintfulOrder\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"printfulVariantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"printfulProductId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantSize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantSku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"taxRate\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AddressToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guestUser\",\"kind\":\"object\",\"type\":\"GuestUser\",\"relationName\":\"AddressToGuestUser\"},{\"name\":\"guestUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"line1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"line2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"AddressToOrder\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"AddressToCart\"}],\"dbName\":null},\"CheckoutSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stripeSessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCheckoutSession\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedTax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedShipping\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promoDiscount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedTotal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"finalTax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"finalShipping\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"finalTotal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeEventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webhookProcessedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PromoCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discountPercentage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minOrderAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxDiscountAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxUses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxUsesPerUser\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validTo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isFirstTimeOnly\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allowedCategories\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"excludedCategories\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"allowedProducts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"excludedProducts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToPromoCode\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPromoCode\"},{\"name\":\"userUsages\",\"kind\":\"object\",\"type\":\"PromoCodeUsage\",\"relationName\":\"PromoCodeToPromoCodeUsage\"}],\"dbName\":null},\"PromoCodeUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promoCode\",\"kind\":\"object\",\"type\":\"PromoCode\",\"relationName\":\"PromoCodeToPromoCodeUsage\"},{\"name\":\"promoCodeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PromoCodeUsageToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPromoCodeUsage\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discountApplied\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"failureReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PrintfulOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPrintfulOrder\"},{\"name\":\"printfulOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"printfulStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"printfulData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"fulfillmentData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedDelivery\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fulfilledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SystemConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"newValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

